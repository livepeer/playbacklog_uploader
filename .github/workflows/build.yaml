name: Build binaries

on:
  pull_request:
  push:
    branches:
      - "master"
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.platform.os }}
    name: Build binaries for ${{ matrix.platform.name }}-${{ matrix.arch.name }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: linux
            os: ubuntu-latest
          - name: darwin
            os: macos-latest
          - name: windows
            os: ubuntu-latest
        arch:
          - suffix: arm64
            name: arm64
          - suffix: x64
            name: amd64

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup node.js runtime
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Download dependencies
        run: npm install

      - name: Build binary using `pkg`
        run: |
          mkdir -p bin/
          npx pkg mistbigqueryuploader.js --targets "node16-${{ matrix.platform.name }}-${{ matrix.arch.suffix }}" --output bin/livepeer-mist-bigquery-uploader

      - uses: actions-ecosystem/action-regex-match@v2
        id: match-tag
        with:
          text: ${{ github.ref_name }}
          regex: '^(master|main|v[0-9]+\.\d+\.\d+)$'

      - name: Codesign and notarize binaries
        if: ${{ matrix.platform.name == 'darwin' && steps.match-tag.outputs.match != '' }}
        uses: livepeer/action-gh-codesign-apple@latest
        with:
          developer-certificate-id: ${{ secrets.CI_MACOS_CERTIFICATE_ID }}
          developer-certificate-base64: ${{ secrets.CI_MACOS_CERTIFICATE_BASE64 }}
          developer-certificate-password: ${{ secrets.CI_MACOS_CERTIFICATE_PASSWORD }}
          app-notarization-email: ${{ secrets.CI_MACOS_NOTARIZATION_USER }}
          app-notarization-password: ${{ secrets.CI_MACOS_NOTARIZATION_PASSWORD }}
          binary-path: "bin/"
          app-bundle-id: "org.livepeer.playbackUploader"

      - name: Rename and move built binary
        if: ${{ matrix.platform.name == 'windows' }}
        run: |
          mv bin/livepeer-mist-bigquery-uploader.exe ./livepeer-mist-bigquery-uploader.exe
          mkdir -p releases/
          zip -q9 "releases/livepeer-mist-bigquery-uploader-${{ matrix.platform.name }}-${{ matrix.arch.name }}.zip" ./livepeer-mist-bigquery-uploader.exe

      - name: Rename and move built binary
        if: ${{ matrix.platform.name != 'windows' }}
        run: |
          mv bin/livepeer-mist-bigquery-uploader ./livepeer-mist-bigquery-uploader
          mkdir -p releases/
          tar -czvf "releases/livepeer-mist-bigquery-uploader-${{ matrix.platform.name }}-${{ matrix.arch.name }}.tar.gz" ./livepeer-mist-bigquery-uploader

      - name: Upload artifacts for processing further in linux
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: releases/
